name: Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
    
jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Check linting
      run:  ruff check .

    - name: Test with pytest
      run: pytest test_app.py
        
    - name: Slack notification for success
      if: success()
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.WEBHOOKS_SLACK_URL }}
        SLACK_USERNAME: Test Bot
        SLACK_ICON_EMOJI: robot_face
        SLACK_CHANNEL: test
        SLACK_MESSAGE: 'Test successful!'
        SLACK_COLOR: success
        MSG_MINIMAL: Actions URL,Commit

    - name: Slack notification for failure
      if: failure()
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.WEBHOOKS_SLACK_URL }}
        SLACK_USERNAME: Test Bot
        SLACK_ICON_EMOJI: robot_face
        SLACK_CHANNEL: test
        SLACK_MESSAGE: 'Test Failed!'
        SLACK_COLOR: failure
        MSG_MINIMAL: Actions URL,Commit
  
  deploy:
    runs-on: ubuntu-latest
    needs: [build_and_test]

    steps:
    #- name: Deploy to Render
    #  run: curl -X POST https://api.render.com/deploy/srv-d0qc56bipnbc73e8g2f0?key=5q9un_Yka0I

    - name: Deploy to Render
      uses: sws2apps/render-deployment@main
      with:
        serviceId: ${{ secrets.RENDER_SERVICE_ID }}
        apiKey: ${{ secrets.RENDER_API_KEY }}
        multipleDeployment: false
    
    - name: Slack notification for success
      if: success()
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.WEBHOOKS_SLACK_URL }}
        SLACK_USERNAME: Deploy Bot
        SLACK_ICON_EMOJI: robot_face
        SLACK_CHANNEL: deploy
        SLACK_MESSAGE: 'Deploy successful!'
        SLACK_COLOR: success
        MSG_MINIMAL: Actions URL,Commit

    - name: Slack notification for failure
      if: failure()
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.WEBHOOKS_SLACK_URL }}
        SLACK_USERNAME: Deploy Bot
        SLACK_ICON_EMOJI: robot_face
        SLACK_CHANNEL: deploy
        SLACK_MESSAGE: 'Deploy Failed!'
        SLACK_COLOR: failure
        MSG_MINIMAL: Actions URL,Commit
