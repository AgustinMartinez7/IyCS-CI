name: Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
    
jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Check linting
      run:  ruff check .

  tests:
    runs-on: ubuntu-latest
    needs: [lint]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Test with pytest
      run: pytest test_app.py

    - name: Test with coverage
      run: |
        coverage run -m pytest
        coverage xml

    - name: SonarQube Scan
      uses: sonarsource/sonarcloud-github-action@v5
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: Slack notification for success
      if: success()
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.WEBHOOKS_SLACK_URL }}
        SLACK_USERNAME: Test Bot
        SLACK_ICON_EMOJI: robot_face
        SLACK_CHANNEL: test
        SLACK_MESSAGE: 'Test successful!'
        SLACK_COLOR: success
        MSG_MINIMAL: Actions URL,Commit

    - name: Slack notification for failure
      if: failure()
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.WEBHOOKS_SLACK_URL }}
        SLACK_USERNAME: Test Bot
        SLACK_ICON_EMOJI: robot_face
        SLACK_CHANNEL: test
        SLACK_MESSAGE: 'Test Failed!'
        SLACK_COLOR: failure
        MSG_MINIMAL: Actions URL,Commit